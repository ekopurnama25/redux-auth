{"ast":null,"code":"var _jsxFileName = \"C:\\\\PROJECT REACT STATE MANAGEMENT\\\\REACT-REDUX-AUTH\\\\auth_redux\\\\src\\\\utils\\\\PrivateRoute.js\";\nimport { Navigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\"; //import { useState } from \"react\";\n\nimport { getCookie } from \"./setCookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = _ref => {\n  var _users, _users$users, _users$users$roles$, _users2;\n\n  let {\n    children,\n    allowRoles\n  } = _ref;\n  //const [users, setUsers] = useState(getCookie());\n  const {\n    ge\n  } = getCookie(); //const { isLoggedIn, users } = useSelector((state) => state.authReducers);\n\n  console.log(\"users\", users);\n  const userHasRequired = users && allowRoles.includes((_users = users) === null || _users === void 0 ? void 0 : (_users$users = _users.users) === null || _users$users === void 0 ? void 0 : (_users$users$roles$ = _users$users.roles[0]) === null || _users$users$roles$ === void 0 ? void 0 : _users$users$roles$.roles) ? true : false;\n  console.log((_users2 = users) === null || _users2 === void 0 ? void 0 : _users2.accessToken); // if (!isLoggedIn) {\n  //   return <Navigate to={\"/login\"} />;\n  // }\n\n  if (!userHasRequired) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n\n  return children;\n};\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["C:/PROJECT REACT STATE MANAGEMENT/REACT-REDUX-AUTH/auth_redux/src/utils/PrivateRoute.js"],"names":["Navigate","useSelector","getCookie","PrivateRoute","children","allowRoles","ge","console","log","users","userHasRequired","includes","roles","accessToken"],"mappings":";AAAA,SAASA,QAAT,QAAyB,kBAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CACA;;AACA,SAASC,SAAT,QAA0B,aAA1B;;;AAEA,MAAMC,YAAY,GAAG,QAA8B;AAAA;;AAAA,MAA7B;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAA6B;AACjD;AACA,QAAM;AAACC,IAAAA;AAAD,MAAOJ,SAAS,EAAtB,CAFiD,CAGjD;;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,KAArB;AACA,QAAMC,eAAe,GACnBD,KAAK,IAAIJ,UAAU,CAACM,QAAX,WAAoBF,KAApB,2DAAoB,OAAOA,KAA3B,wEAAoB,aAAcG,KAAd,CAAoB,CAApB,CAApB,wDAAoB,oBAAwBA,KAA5C,CAAT,GAA8D,IAA9D,GAAqE,KADvE;AAEAL,EAAAA,OAAO,CAACC,GAAR,YAAYC,KAAZ,4CAAY,QAAOI,WAAnB,EAPiD,CASjD;AACA;AACA;;AAEA,MAAI,CAACH,eAAL,EAAsB;AACpB,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,SAAON,QAAP;AACD,CAlBD;;KAAMD,Y;AAoBN,eAAeA,YAAf","sourcesContent":["import { Navigate } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n//import { useState } from \"react\";\r\nimport { getCookie } from \"./setCookie\";\r\n\r\nconst PrivateRoute = ({ children, allowRoles }) => {\r\n  //const [users, setUsers] = useState(getCookie());\r\n  const {ge} = getCookie();\r\n  //const { isLoggedIn, users } = useSelector((state) => state.authReducers);\r\n  console.log(\"users\", users);\r\n  const userHasRequired =\r\n    users && allowRoles.includes(users?.users?.roles[0]?.roles) ? true : false;\r\n  console.log(users?.accessToken);\r\n\r\n  // if (!isLoggedIn) {\r\n  //   return <Navigate to={\"/login\"} />;\r\n  // }\r\n\r\n  if (!userHasRequired) {\r\n    return <Navigate to={\"/login\"} />;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default PrivateRoute;\r\n"]},"metadata":{},"sourceType":"module"}