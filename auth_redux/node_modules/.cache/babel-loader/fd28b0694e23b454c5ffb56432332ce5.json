{"ast":null,"code":"var _jsxFileName = \"C:\\\\PROJECT REACT STATE MANAGEMENT\\\\REACT-REDUX-AUTH\\\\auth_redux\\\\src\\\\utils\\\\PrivateRoute.js\",\n    _s = $RefreshSig$();\n\nimport { Navigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = _ref => {\n  _s();\n\n  var _users, _users$users, _users$users$roles$;\n\n  let {\n    children,\n    allowRoles\n  } = _ref;\n  const {\n    isLoggedInusers\n  } = useSelector(state => state.authReducers);\n  const userHasRequired = users && allowRoles.includes((_users = users) === null || _users === void 0 ? void 0 : (_users$users = _users.users) === null || _users$users === void 0 ? void 0 : (_users$users$roles$ = _users$users.roles[0]) === null || _users$users$roles$ === void 0 ? void 0 : _users$users$roles$.roles); //console.log(userHasRequired);\n\n  if (!isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (isLoggedIn && !userHasRequired) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n\n  return children;\n};\n\n_s(PrivateRoute, \"dGCIWTqMOF0rr7vngo/Ewfzsdc4=\", false, function () {\n  return [useSelector];\n});\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["C:/PROJECT REACT STATE MANAGEMENT/REACT-REDUX-AUTH/auth_redux/src/utils/PrivateRoute.js"],"names":["Navigate","useSelector","PrivateRoute","children","allowRoles","isLoggedInusers","state","authReducers","userHasRequired","users","includes","roles","isLoggedIn"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,kBAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,MAAMC,YAAY,GAAG,QAA8B;AAAA;;AAAA;;AAAA,MAA7B;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAA6B;AACjD,QAAM;AAAEC,IAAAA;AAAF,MAAsBJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,YAAlB,CAAvC;AAEA,QAAMC,eAAe,GACnBC,KAAK,IAAIL,UAAU,CAACM,QAAX,WAAoBD,KAApB,2DAAoB,OAAOA,KAA3B,wEAAoB,aAAcE,KAAd,CAAoB,CAApB,CAApB,wDAAoB,oBAAwBA,KAA5C,CADX,CAHiD,CAMjD;;AACA,MAAI,CAACC,UAAL,EAAiB;AACf,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAIA,UAAU,IAAI,CAACJ,eAAnB,EAAoC;AAClC,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,SAAOL,QAAP;AACD,CAhBD;;GAAMD,Y;UACwBD,W;;;KADxBC,Y;AAkBN,eAAeA,YAAf","sourcesContent":["import { Navigate } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst PrivateRoute = ({ children, allowRoles }) => {\r\n  const { isLoggedInusers } = useSelector((state) => state.authReducers);\r\n\r\n  const userHasRequired =\r\n    users && allowRoles.includes(users?.users?.roles[0]?.roles);\r\n\r\n  //console.log(userHasRequired);\r\n  if (!isLoggedIn) {\r\n    return <Navigate to={\"/login\"} />;\r\n  }\r\n\r\n  if (isLoggedIn && !userHasRequired) {\r\n    return <Navigate to={\"/login\"} />;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default PrivateRoute;\r\n"]},"metadata":{},"sourceType":"module"}