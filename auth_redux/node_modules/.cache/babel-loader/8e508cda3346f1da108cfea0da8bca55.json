{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport { useSelector } from \"react-redux\";\nimport dayjs from \"dayjs\";\nconst BASE_URL = \"http://localhost:5000/api\";\n\nconst useAxios = () => {\n  _s();\n\n  const {\n    users\n  } = useSelector(state => state.authReducers);\n  const axiosInstance = axios.create({\n    BASE_URL,\n    headers: {\n      Authorization: `Bearer ${users === null || users === void 0 ? void 0 : users.accessToken}`\n    }\n  });\n  axiosInstance.interceptors.request.use(async req => {\n    const user = jwt_decode(authTokens.access);\n    const isExpired = dayjs.unix(user.exp).diff(dayjs()) < 1;\n    if (!isExpired) return req;\n    const response = await axios.post(`${baseURL}/api/token/refresh/`, {\n      refresh: authTokens.refresh\n    });\n    localStorage.setItem(\"authTokens\", JSON.stringify(response.data));\n    setAuthTokens(response.data);\n    setUser(jwt_decode(response.data.access));\n    req.headers.Authorization = `Bearer ${response.data.access}`;\n    return req;\n  });\n  return axiosInstance;\n};\n\n_s(useAxios, \"V/z1XVlAcsE+Fi5UJdza+2p1LZc=\", false, function () {\n  return [useSelector];\n});\n\nexport default useAxios;","map":{"version":3,"sources":["C:/PROJECT REACT STATE MANAGEMENT/REACT-REDUX-AUTH/auth_redux/src/utils/useAxios.js"],"names":["axios","jwt_decode","useSelector","dayjs","BASE_URL","useAxios","users","state","authReducers","axiosInstance","create","headers","Authorization","accessToken","interceptors","request","use","req","user","authTokens","access","isExpired","unix","exp","diff","response","post","baseURL","refresh","localStorage","setItem","JSON","stringify","data","setAuthTokens","setUser"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,QAAQ,GAAG,2BAAjB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAYJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,YAAlB,CAA7B;AAGA,QAAMC,aAAa,GAAGT,KAAK,CAACU,MAAN,CAAa;AACjCN,IAAAA,QADiC;AAEjCO,IAAAA,OAAO,EAAE;AAAEC,MAAAA,aAAa,EAAG,UAASN,KAAV,aAAUA,KAAV,uBAAUA,KAAK,CAAEO,WAAY;AAA9C;AAFwB,GAAb,CAAtB;AAKAJ,EAAAA,aAAa,CAACK,YAAd,CAA2BC,OAA3B,CAAmCC,GAAnC,CAAuC,MAAOC,GAAP,IAAe;AACpD,UAAMC,IAAI,GAAGjB,UAAU,CAACkB,UAAU,CAACC,MAAZ,CAAvB;AACA,UAAMC,SAAS,GAAGlB,KAAK,CAACmB,IAAN,CAAWJ,IAAI,CAACK,GAAhB,EAAqBC,IAArB,CAA0BrB,KAAK,EAA/B,IAAqC,CAAvD;AAEA,QAAI,CAACkB,SAAL,EAAgB,OAAOJ,GAAP;AAEhB,UAAMQ,QAAQ,GAAG,MAAMzB,KAAK,CAAC0B,IAAN,CAAY,GAAEC,OAAQ,qBAAtB,EAA4C;AACjEC,MAAAA,OAAO,EAAET,UAAU,CAACS;AAD6C,KAA5C,CAAvB;AAIAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCC,IAAI,CAACC,SAAL,CAAeP,QAAQ,CAACQ,IAAxB,CAAnC;AAEAC,IAAAA,aAAa,CAACT,QAAQ,CAACQ,IAAV,CAAb;AACAE,IAAAA,OAAO,CAAClC,UAAU,CAACwB,QAAQ,CAACQ,IAAT,CAAcb,MAAf,CAAX,CAAP;AAEAH,IAAAA,GAAG,CAACN,OAAJ,CAAYC,aAAZ,GAA6B,UAASa,QAAQ,CAACQ,IAAT,CAAcb,MAAO,EAA3D;AACA,WAAOH,GAAP;AACD,GAjBD;AAmBA,SAAOR,aAAP;AACD,CA7BD;;GAAMJ,Q;UACcH,W;;;AA8BpB,eAAeG,QAAf","sourcesContent":["import axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { useSelector } from \"react-redux\";\r\nimport dayjs from \"dayjs\";\r\n\r\nconst BASE_URL = \"http://localhost:5000/api\";\r\n\r\nconst useAxios = () => {\r\n  const { users } = useSelector((state) => state.authReducers);\r\n \r\n\r\n  const axiosInstance = axios.create({\r\n    BASE_URL,\r\n    headers: { Authorization: `Bearer ${users?.accessToken}` },\r\n  });\r\n\r\n  axiosInstance.interceptors.request.use(async (req) => {\r\n    const user = jwt_decode(authTokens.access);\r\n    const isExpired = dayjs.unix(user.exp).diff(dayjs()) < 1;\r\n\r\n    if (!isExpired) return req;\r\n\r\n    const response = await axios.post(`${baseURL}/api/token/refresh/`, {\r\n      refresh: authTokens.refresh,\r\n    });\r\n\r\n    localStorage.setItem(\"authTokens\", JSON.stringify(response.data));\r\n\r\n    setAuthTokens(response.data);\r\n    setUser(jwt_decode(response.data.access));\r\n\r\n    req.headers.Authorization = `Bearer ${response.data.access}`;\r\n    return req;\r\n  });\r\n\r\n  return axiosInstance;\r\n};\r\n\r\nexport default useAxios;\r\n"]},"metadata":{},"sourceType":"module"}