{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUsers } from \"../redux/actions/usersAction\";\n\nconst CheckUsers = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    users\n  } = useSelector(state => state.authReducers);\n  console.log(users);\n  useEffect(() => {\n    const ChecksersToken = async () => {\n      try {\n        const res = await dispatch(getUsers(users));\n        console.log(res);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    ChecksersToken();\n  }, []);\n};\n\n_s(CheckUsers, \"tbZ6KJdmADm7ZyMUg0L8SjVwHkk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CheckUsers;\nexport default CheckUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckUsers\");","map":{"version":3,"sources":["C:/PROJECT REACT STATE MANAGEMENT/REACT-REDUX-AUTH/auth_redux/src/useEffect/CheckUsers.js"],"names":["useEffect","useDispatch","useSelector","getUsers","CheckUsers","dispatch","users","state","authReducers","console","log","ChecksersToken","res","e"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,8BAAzB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAYJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,YAAlB,CAA7B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACAN,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,cAAc,GAAG,YAAY;AACjC,UAAI;AACF,cAAMC,GAAG,GAAG,MAAMP,QAAQ,CAACF,QAAQ,CAACG,KAAD,CAAT,CAA1B;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,OAHD,CAGE,OAAOC,CAAP,EAAU;AACVJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,CAAZ;AACD;AACF,KAPD;;AASAF,IAAAA,cAAc;AACf,GAXQ,EAWN,EAXM,CAAT;AAYD,CAhBD;;GAAMP,U;UACaH,W,EACCC,W;;;KAFdE,U;AAkBN,eAAeA,UAAf","sourcesContent":["import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUsers } from \"../redux/actions/usersAction\";\r\n\r\nconst CheckUsers = () => {\r\n  const dispatch = useDispatch();\r\n  const { users } = useSelector((state) => state.authReducers);\r\n  console.log(users);\r\n  useEffect(() => {\r\n    const ChecksersToken = async () => {\r\n      try {\r\n        const res = await dispatch(getUsers(users));\r\n        console.log(res);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    };\r\n\r\n    ChecksersToken()\r\n  }, []);\r\n};\r\n\r\nexport default CheckUsers;\r\n"]},"metadata":{},"sourceType":"module"}