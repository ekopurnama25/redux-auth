{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axiosInstance from \"./useAxios\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst useAxiosPrivate = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    users\n  } = useSelector(state => state.authReducers);\n  useEffect(() => {\n    const requestIntercept = axiosInstance.interceptors.request.use(config => {\n      if (!config.headers[\"authorization\"]) {\n        config.headers[\"authorization\"] = `Bearer ${users === null || users === void 0 ? void 0 : users.accessToken}`;\n      }\n\n      return config;\n    }, error => Promise.reject(error));\n    const responseIntercept = axiosPrivate.interceptors.response.use(response => response, async error => {\n      var _error$response;\n\n      const prevRequest = error === null || error === void 0 ? void 0 : error.config;\n\n      if ((error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 403 && !(prevRequest !== null && prevRequest !== void 0 && prevRequest.sent)) {\n        prevRequest.sent = true;\n        const newAccessToken = \"hallo\";\n        prevRequest.headers[\"authorization\"] = `Bearer ${newAccessToken}`;\n        return axiosPrivate(prevRequest);\n      }\n\n      return Promise.reject(error);\n    });\n    return () => {\n      axiosPrivate.interceptors.request.eject(requestIntercept);\n      axiosPrivate.interceptors.response.eject(responseIntercept);\n    };\n  }, [users]);\n  return axiosPrivate;\n};\n\n_s(useAxiosPrivate, \"tbZ6KJdmADm7ZyMUg0L8SjVwHkk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\nexport default useAxiosPrivate;\nz;","map":{"version":3,"sources":["C:/PROJECT REACT STATE MANAGEMENT/REACT-REDUX-AUTH/auth_redux/src/utils/useAxiosPrivate.js"],"names":["axiosInstance","useEffect","useDispatch","useSelector","useAxiosPrivate","dispatch","users","state","authReducers","requestIntercept","interceptors","request","use","config","headers","accessToken","error","Promise","reject","responseIntercept","axiosPrivate","response","prevRequest","status","sent","newAccessToken","eject","z"],"mappings":";;AAAA,OAAOA,aAAP,MAA2B,YAA3B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC5B,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAYH,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACC,YAAlB,CAA7B;AACAP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,gBAAgB,GAAGT,aAAa,CAACU,YAAd,CAA2BC,OAA3B,CAAmCC,GAAnC,CACtBC,MAAD,IAAY;AACV,UAAI,CAACA,MAAM,CAACC,OAAP,CAAe,eAAf,CAAL,EAAsC;AACpCD,QAAAA,MAAM,CAACC,OAAP,CAAe,eAAf,IAAmC,UAASR,KAAV,aAAUA,KAAV,uBAAUA,KAAK,CAAES,WAAY,EAA/D;AACD;;AACD,aAAOF,MAAP;AACD,KANsB,EAOtBG,KAAD,IAAWC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAPY,CAAzB;AASA,UAAMG,iBAAiB,GAAGC,YAAY,CAACV,YAAb,CAA0BW,QAA1B,CAAmCT,GAAnC,CACvBS,QAAD,IAAcA,QADU,EAExB,MAAOL,KAAP,IAAiB;AAAA;;AACf,YAAMM,WAAW,GAAGN,KAAH,aAAGA,KAAH,uBAAGA,KAAK,CAAEH,MAA3B;;AACA,UAAI,CAAAG,KAAK,SAAL,IAAAA,KAAK,WAAL,+BAAAA,KAAK,CAAEK,QAAP,oEAAiBE,MAAjB,MAA4B,GAA5B,IAAmC,EAACD,WAAD,aAACA,WAAD,eAACA,WAAW,CAAEE,IAAd,CAAvC,EAA2D;AACzDF,QAAAA,WAAW,CAACE,IAAZ,GAAmB,IAAnB;AACA,cAAMC,cAAc,GAAG,OAAvB;AACAH,QAAAA,WAAW,CAACR,OAAZ,CAAoB,eAApB,IAAwC,UAASW,cAAe,EAAhE;AACA,eAAOL,YAAY,CAACE,WAAD,CAAnB;AACD;;AACD,aAAOL,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,KAXuB,CAA1B;AAaA,WAAO,MAAM;AACXI,MAAAA,YAAY,CAACV,YAAb,CAA0BC,OAA1B,CAAkCe,KAAlC,CAAwCjB,gBAAxC;AACAW,MAAAA,YAAY,CAACV,YAAb,CAA0BW,QAA1B,CAAmCK,KAAnC,CAAyCP,iBAAzC;AACD,KAHD;AAID,GA3BQ,EA2BN,CAACb,KAAD,CA3BM,CAAT;AA4BA,SAAOc,YAAP;AACD,CAhCD;;GAAMhB,e;UACaF,W,EACCC,W;;;AAgCpB,eAAeC,eAAf;AACAuB,CAAC","sourcesContent":["import axiosInstance  from \"./useAxios\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst useAxiosPrivate = () => {\r\n  const dispatch = useDispatch();\r\n  const { users } = useSelector((state) => state.authReducers);\r\n  useEffect(() => {\r\n    const requestIntercept = axiosInstance.interceptors.request.use(\r\n      (config) => {\r\n        if (!config.headers[\"authorization\"]) {\r\n          config.headers[\"authorization\"] = `Bearer ${users?.accessToken}`;\r\n        }\r\n        return config;\r\n      },\r\n      (error) => Promise.reject(error)\r\n    );\r\n    const responseIntercept = axiosPrivate.interceptors.response.use(\r\n      (response) => response,\r\n      async (error) => {\r\n        const prevRequest = error?.config;\r\n        if (error?.response?.status === 403 && !prevRequest?.sent) {\r\n          prevRequest.sent = true;\r\n          const newAccessToken = \"hallo\";\r\n          prevRequest.headers[\"authorization\"] = `Bearer ${newAccessToken}`;\r\n          return axiosPrivate(prevRequest);\r\n        }\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n    return () => {\r\n      axiosPrivate.interceptors.request.eject(requestIntercept);\r\n      axiosPrivate.interceptors.response.eject(responseIntercept);\r\n    };\r\n  }, [users]);\r\n  return axiosPrivate;\r\n};\r\n\r\nexport default useAxiosPrivate;\r\nz;\r\n"]},"metadata":{},"sourceType":"module"}