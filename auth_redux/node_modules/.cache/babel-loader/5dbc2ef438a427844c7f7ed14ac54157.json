{"ast":null,"code":"var _s = $RefreshSig$();\n\n//import { Navigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nconst PrivateRoute = _ref => {\n  _s();\n\n  var _user$users, _user$users$roles$;\n\n  let {\n    children,\n    allowRoles\n  } = _ref;\n  const {\n    isLoggedIn,\n    user\n  } = useSelector(state => state.authReducers);\n  const userHasRequired = user && allowRoles.includes(user === null || user === void 0 ? void 0 : (_user$users = user.users) === null || _user$users === void 0 ? void 0 : (_user$users$roles$ = _user$users.roles[0]) === null || _user$users$roles$ === void 0 ? void 0 : _user$users$roles$.roles);\n  console.log(userHasRequired); // if (!isLoggedIn) {\n  //   return <Navigate to={\"/login\"} />;\n  // }\n  // if (isLoggedIn && !userHasRequired) {\n  //   return <Navigate to={\"/login\"} />;\n  // }\n\n  return children;\n};\n\n_s(PrivateRoute, \"PlHGE7bJBTTG3gp9g2UUWMwpBmE=\", false, function () {\n  return [useSelector];\n});\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["C:/PROJECT REACT STATE MANAGEMENT/REACT-REDUX-AUTH/auth_redux/src/utils/PrivateRoute.js"],"names":["useSelector","PrivateRoute","children","allowRoles","isLoggedIn","user","state","authReducers","userHasRequired","includes","users","roles","console","log"],"mappings":";;AAAA;AACA,SAASA,WAAT,QAA4B,aAA5B;;AAEA,MAAMC,YAAY,GAAG,QAA8B;AAAA;;AAAA;;AAAA,MAA7B;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAA6B;AACjD,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAuBL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,YAAlB,CAAxC;AAEA,QAAMC,eAAe,GACnBH,IAAI,IAAIF,UAAU,CAACM,QAAX,CAAoBJ,IAApB,aAAoBA,IAApB,sCAAoBA,IAAI,CAAEK,KAA1B,sEAAoB,YAAaC,KAAb,CAAmB,CAAnB,CAApB,uDAAoB,mBAAuBA,KAA3C,CADV;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,eAAZ,EANiD,CAOjD;AACA;AACA;AAEA;AACA;AACA;;AAEA,SAAON,QAAP;AACD,CAhBD;;GAAMD,Y;UACyBD,W;;;KADzBC,Y;AAkBN,eAAeA,YAAf","sourcesContent":["//import { Navigate } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst PrivateRoute = ({ children, allowRoles }) => {\r\n  const { isLoggedIn, user } = useSelector((state) => state.authReducers);\r\n\r\n  const userHasRequired =\r\n    user && allowRoles.includes(user?.users?.roles[0]?.roles);\r\n\r\n  console.log(userHasRequired);\r\n  // if (!isLoggedIn) {\r\n  //   return <Navigate to={\"/login\"} />;\r\n  // }\r\n\r\n  // if (isLoggedIn && !userHasRequired) {\r\n  //   return <Navigate to={\"/login\"} />;\r\n  // }\r\n\r\n  return children;\r\n};\r\n\r\nexport default PrivateRoute;\r\n"]},"metadata":{},"sourceType":"module"}