{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport jwt_decode from \"jwt-decode\";\nimport dayjs from 'dayjs';\nconst BASE_URL = \"http://localhost:5000/api\";\n\nconst useAxios = () => {\n  _s();\n\n  const {\n    authTokens,\n    setUser,\n    setAuthTokens\n  } = useContext(AuthContext);\n  const axiosInstance = axios.create({\n    baseURL,\n    headers: {\n      Authorization: `Bearer ${authTokens === null || authTokens === void 0 ? void 0 : authTokens.access}`\n    }\n  });\n  axiosInstance.interceptors.request.use(async req => {\n    const user = jwt_decode(authTokens.access);\n    const isExpired = dayjs.unix(user.exp).diff(dayjs()) < 1;\n    if (!isExpired) return req;\n    const response = await axios.post(`${baseURL}/api/token/refresh/`, {\n      refresh: authTokens.refresh\n    });\n    localStorage.setItem('authTokens', JSON.stringify(response.data));\n    setAuthTokens(response.data);\n    setUser(jwt_decode(response.data.access));\n    req.headers.Authorization = `Bearer ${response.data.access}`;\n    return req;\n  });\n  return axiosInstance;\n};\n\n_s(useAxios, \"oa5zxswdw/y5bPoFPPlcGQgwV5s=\");\n\nexport default useAxios;","map":{"version":3,"sources":["C:/PROJECT REACT STATE MANAGEMENT/REACT-REDUX-AUTH/auth_redux/src/utils/useAxios.js"],"names":["axios","jwt_decode","dayjs","BASE_URL","useAxios","authTokens","setUser","setAuthTokens","useContext","AuthContext","axiosInstance","create","baseURL","headers","Authorization","access","interceptors","request","use","req","user","isExpired","unix","exp","diff","response","post","refresh","localStorage","setItem","JSON","stringify","data"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,QAAQ,GAAG,2BAAjB;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM;AAACC,IAAAA,UAAD;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA;AAAtB,MAAuCC,UAAU,CAACC,WAAD,CAAvD;AAEA,QAAMC,aAAa,GAAGV,KAAK,CAACW,MAAN,CAAa;AAC/BC,IAAAA,OAD+B;AAE/BC,IAAAA,OAAO,EAAC;AAACC,MAAAA,aAAa,EAAG,UAAST,UAAV,aAAUA,UAAV,uBAAUA,UAAU,CAAEU,MAAO;AAA7C;AAFuB,GAAb,CAAtB;AAMAL,EAAAA,aAAa,CAACM,YAAd,CAA2BC,OAA3B,CAAmCC,GAAnC,CAAuC,MAAMC,GAAN,IAAa;AAEhD,UAAMC,IAAI,GAAGnB,UAAU,CAACI,UAAU,CAACU,MAAZ,CAAvB;AACA,UAAMM,SAAS,GAAGnB,KAAK,CAACoB,IAAN,CAAWF,IAAI,CAACG,GAAhB,EAAqBC,IAArB,CAA0BtB,KAAK,EAA/B,IAAqC,CAAvD;AAEA,QAAG,CAACmB,SAAJ,EAAe,OAAOF,GAAP;AAEf,UAAMM,QAAQ,GAAG,MAAMzB,KAAK,CAAC0B,IAAN,CAAY,GAAEd,OAAQ,qBAAtB,EAA4C;AAC/De,MAAAA,OAAO,EAAEtB,UAAU,CAACsB;AAD2C,KAA5C,CAAvB;AAIAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCC,IAAI,CAACC,SAAL,CAAeN,QAAQ,CAACO,IAAxB,CAAnC;AAEAzB,IAAAA,aAAa,CAACkB,QAAQ,CAACO,IAAV,CAAb;AACA1B,IAAAA,OAAO,CAACL,UAAU,CAACwB,QAAQ,CAACO,IAAT,CAAcjB,MAAf,CAAX,CAAP;AAEAI,IAAAA,GAAG,CAACN,OAAJ,CAAYC,aAAZ,GAA6B,UAASW,QAAQ,CAACO,IAAT,CAAcjB,MAAO,EAA3D;AACA,WAAOI,GAAP;AACH,GAlBD;AAoBA,SAAOT,aAAP;AACH,CA9BD;;GAAMN,Q;;AAgCN,eAAeA,QAAf","sourcesContent":["import axios from 'axios'\r\nimport jwt_decode from \"jwt-decode\";\r\nimport dayjs from 'dayjs'\r\n\r\nconst BASE_URL = \"http://localhost:5000/api\";\r\n\r\n\r\nconst useAxios = () => {\r\n    const {authTokens, setUser, setAuthTokens} = useContext(AuthContext)\r\n\r\n    const axiosInstance = axios.create({\r\n        baseURL,\r\n        headers:{Authorization: `Bearer ${authTokens?.access}`}\r\n    });\r\n\r\n\r\n    axiosInstance.interceptors.request.use(async req => {\r\n    \r\n        const user = jwt_decode(authTokens.access)\r\n        const isExpired = dayjs.unix(user.exp).diff(dayjs()) < 1;\r\n    \r\n        if(!isExpired) return req\r\n    \r\n        const response = await axios.post(`${baseURL}/api/token/refresh/`, {\r\n            refresh: authTokens.refresh\r\n          });\r\n    \r\n        localStorage.setItem('authTokens', JSON.stringify(response.data))\r\n        \r\n        setAuthTokens(response.data)\r\n        setUser(jwt_decode(response.data.access))\r\n        \r\n        req.headers.Authorization = `Bearer ${response.data.access}`\r\n        return req\r\n    })\r\n    \r\n    return axiosInstance\r\n}\r\n\r\nexport default useAxios;"]},"metadata":{},"sourceType":"module"}