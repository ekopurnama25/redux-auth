{"ast":null,"code":"import { LOGIN_SUCCESS, REFRESH_TOKEN_SUCCESS } from \"../../types\";\nimport { getCookie } from \"../../../utils/setCookie\";\nconst users = getCookie();\nconst initialState = users ? {\n  isLoggedIn: true,\n  users\n} : {\n  isLoggedIn: false,\n  users: null\n};\n\nconst auth = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOGIN_SUCCESS:\n      return { ...state,\n        isLoggedIn: true,\n        users: action.payload.users\n      };\n\n    case REFRESH_TOKEN_SUCCESS:\n      return { ...state,\n        users: { ...users,\n          accessToken: action.payload\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default auth;","map":{"version":3,"sources":["C:/PROJECT REACT STATE MANAGEMENT/REACT-REDUX-AUTH/auth_redux/src/redux/reducers/auth/index.js"],"names":["LOGIN_SUCCESS","REFRESH_TOKEN_SUCCESS","getCookie","users","initialState","isLoggedIn","auth","state","action","type","payload","accessToken"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,qBAAxB,QAAqD,aAArD;AACA,SAASC,SAAT,QAA0B,0BAA1B;AAEA,MAAMC,KAAK,GAAGD,SAAS,EAAvB;AACA,MAAME,YAAY,GAAGD,KAAK,GACtB;AAAEE,EAAAA,UAAU,EAAE,IAAd;AAAoBF,EAAAA;AAApB,CADsB,GAEtB;AAAEE,EAAAA,UAAU,EAAE,KAAd;AAAqBF,EAAAA,KAAK,EAAE;AAA5B,CAFJ;;AAIA,MAAMG,IAAI,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,aAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELF,QAAAA,UAAU,EAAE,IAFP;AAGLF,QAAAA,KAAK,EAAEK,MAAM,CAACE,OAAP,CAAeP;AAHjB,OAAP;;AAKF,SAAKF,qBAAL;AAEE,aAAO,EACL,GAAGM,KADE;AAELJ,QAAAA,KAAK,EAAE,EAAE,GAAGA,KAAL;AAAYQ,UAAAA,WAAW,EAAEH,MAAM,CAACE;AAAhC;AAFF,OAAP;;AAIF;AACE,aAAOH,KAAP;AAdJ;AAgBD,CAjBD;;AAmBA,eAAeD,IAAf","sourcesContent":["import { LOGIN_SUCCESS, REFRESH_TOKEN_SUCCESS } from \"../../types\";\r\nimport { getCookie } from \"../../../utils/setCookie\";\r\n\r\nconst users = getCookie();\r\nconst initialState = users\r\n  ? { isLoggedIn: true, users }\r\n  : { isLoggedIn: false, users: null };\r\n\r\nconst auth = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        users: action.payload.users,\r\n      };\r\n    case REFRESH_TOKEN_SUCCESS:\r\n      \r\n      return {\r\n        ...state,\r\n        users: { ...users, accessToken: action.payload },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default auth;\r\n"]},"metadata":{},"sourceType":"module"}