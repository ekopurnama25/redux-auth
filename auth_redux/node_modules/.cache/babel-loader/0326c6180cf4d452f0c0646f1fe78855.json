{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUsers } from \"../redux/actions/usersAction\";\n\nconst checkUsers = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    users\n  } = useSelector(state => state.authReducers);\n  useEffect(() => {\n    //const CheckToken = async () => {\n    dispatch(getUsers(users === null || users === void 0 ? void 0 : users.accessToken)); //return data;\n    //etToken(data);\n    // };\n    //CheckToken();\n  }, [dispatch]);\n};\n\n_s(checkUsers, \"tbZ6KJdmADm7ZyMUg0L8SjVwHkk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\nexport default checkUsers;","map":{"version":3,"sources":["C:/PROJECT REACT STATE MANAGEMENT/REACT-REDUX-AUTH/auth_redux/src/useEffect/checkUsers.js"],"names":["useEffect","useDispatch","useSelector","getUsers","checkUsers","dispatch","users","state","authReducers","accessToken"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,8BAAzB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAYJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,YAAlB,CAA7B;AAEAR,EAAAA,SAAS,CAAE,MAAM;AACf;AACCK,IAAAA,QAAQ,CAACF,QAAQ,CAACG,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAEG,WAAR,CAAT,CAAR,CAFc,CAGf;AACA;AACA;AAEA;AACD,GARQ,EAQN,CAACJ,QAAD,CARM,CAAT;AASD,CAbD;;GAAMD,U;UACaH,W,EACCC,W;;;AAapB,eAAeE,UAAf","sourcesContent":["import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUsers } from \"../redux/actions/usersAction\";\r\n\r\nconst checkUsers = () => {\r\n  const dispatch = useDispatch();\r\n  const { users } = useSelector((state) => state.authReducers);\r\n\r\n  useEffect( () => {\r\n    //const CheckToken = async () => {\r\n     dispatch(getUsers(users?.accessToken));\r\n    //return data;\r\n    //etToken(data);\r\n    // };\r\n\r\n    //CheckToken();\r\n  }, [dispatch]);\r\n};\r\n\r\nexport default checkUsers;\r\n"]},"metadata":{},"sourceType":"module"}