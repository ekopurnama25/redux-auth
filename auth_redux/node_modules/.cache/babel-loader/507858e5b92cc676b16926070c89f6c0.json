{"ast":null,"code":"import { LOGIN_SUCCESS, REFRESH_TOKEN_SUCCESS } from \"../../types\";\nimport { getCookie } from \"../../../utils/setCookie\";\nconst initialState = users ? {\n  isLoggedIn: true,\n  users: getCookie()\n} : {\n  isLoggedIn: true,\n  users: getCookie()\n};\n\nconst auth = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOGIN_SUCCESS:\n      return { ...state,\n        isLoggedIn: true,\n        users: action.payload.users\n      };\n\n    case REFRESH_TOKEN_SUCCESS:\n      return { ...state,\n        isLoggedIn: true,\n        users: action.payload.users\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default auth;","map":{"version":3,"sources":["C:/PROJECT REACT STATE MANAGEMENT/REACT-REDUX-AUTH/auth_redux/src/redux/reducers/auth/index.js"],"names":["LOGIN_SUCCESS","REFRESH_TOKEN_SUCCESS","getCookie","initialState","users","isLoggedIn","auth","state","action","type","payload"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,qBAAxB,QAAqD,aAArD;AACA,SAASC,SAAT,QAA0B,0BAA1B;AAEA,MAAMC,YAAY,GAAGC,KAAK,GAAI;AAC5BC,EAAAA,UAAU,EAAE,IADgB;AAE5BD,EAAAA,KAAK,EAAEF,SAAS;AAFY,CAAJ,GAGvB;AAACG,EAAAA,UAAU,EAAE,IAAb;AACDD,EAAAA,KAAK,EAAEF,SAAS;AADf,CAHH;;AAMA,MAAMI,IAAI,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,aAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELF,QAAAA,UAAU,EAAE,IAFP;AAGLD,QAAAA,KAAK,EAAEI,MAAM,CAACE,OAAP,CAAeN;AAHjB,OAAP;;AAKF,SAAKH,qBAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELF,QAAAA,UAAU,EAAE,IAFP;AAGLD,QAAAA,KAAK,EAAEI,MAAM,CAACE,OAAP,CAAeN;AAHjB,OAAP;;AAKF;AACE,aAAOG,KAAP;AAdJ;AAgBD,CAjBD;;AAmBA,eAAeD,IAAf","sourcesContent":["import { LOGIN_SUCCESS, REFRESH_TOKEN_SUCCESS } from \"../../types\";\r\nimport { getCookie } from \"../../../utils/setCookie\";\r\n\r\nconst initialState = users  ? {\r\n  isLoggedIn: true,\r\n  users: getCookie(),\r\n}: {isLoggedIn: true,\r\n  users: getCookie(),};\r\n\r\nconst auth = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        users: action.payload.users,\r\n      };\r\n    case REFRESH_TOKEN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        users: action.payload.users,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default auth;\r\n"]},"metadata":{},"sourceType":"module"}